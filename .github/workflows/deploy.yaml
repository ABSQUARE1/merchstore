name: Matchapp Server CI/CD
on:
  push:
    branches: ['main']

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME }}
  AWS_REGION: us-east-1
  PRIVATE_SSH_KEY: ${{ secrets.PRIVATE_SSH_KEY }}

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    outputs:
      CLIENT_PUBLIC_IP: ${{ steps.set-ip.outputs.client_public_ip }}
    steps:
      - name: Checkout
        uses: actions/Checkout@v2
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform init
        id: init
        run: terraform init 
        working-directory: ./terraform
      - name: Terraform plan
        id: plan
        run: |-
          terraform plan \
          -out=PLAN
        working-directory: ./terraform
      - name: Terraform apply
        id: apply
        run: terraform apply PLAN
        working-directory: ./terraform
      - name: Set outputs
        id: set-ip
        run: |-
          echo "::set-output name=client_public_ip::$(terraform output instance-ip)"
        working-directory: ./terraform

  deploy-server:
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set IP env variable
        run:  |-
          echo CLIENT_PUBLIC_IP=${{ needs.deploy-infra.outputs.CLIENT_PUBLIC_IP }} >> $GITHUB_ENV
      - name: Deploy App to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.CLIENT_PUBLIC_IP }}
          username: ubuntu
          key: ${{ env.PRIVATE_SSH_KEY }}
          envs: PRIVATE_SSH_KEY,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY
          script: |-
            #!/bin/bash
            sudo apt-get update -y
            sudo apt-get install nginx npm git -y
            sudo systemctl start nginx
            sudo systemctl enable nginx
            sudo npm install -g yarn 
            sudo ufw allow OpenSSH
            sudo ufw allow Nginx
           

            sudo tee /etc/nginx/sites-available/config.conf > /dev/null <<EOF
            server {
              listen 80 default_server;
              server_name _;

              location / {
                  proxy_pass http://localhost:3000;
              }
            }

            sudo rm -rf /etc/nginx/sites-enabled/default

            sudo ln -s /etc/nginx/sites-enabled/config.conf /etc/nginx/site-enabled/
            sudo nginx -t
            sudo systemctl restart nginx

            sudo git clone https://github.com/ABSQUARE1/merchstore.git merchstore
            cd merchstore
            yarn
            yarn start





  